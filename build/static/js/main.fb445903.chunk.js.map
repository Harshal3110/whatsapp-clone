{"version":3,"sources":["firebase.js","SidebarChat.js","StateProvider.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","addNewChat","id","name","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setRooms","user","unsubscribe","photoURL","IconButton","SearchOutlined","placeholder","type","room","Chat","input","setInput","roomId","useParams","setRoomName","Date","length","timestamp","toDate","toUTCString","AttachFile","displayName","onChange","e","target","preventDefault","console","log","FieldValue","serverTimestamp","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb445903.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCpzoZ69X3Sr4ypQy8nHrq9G8e911O6dlM\",\n  authDomain: \"whatsapp-clone-e9611.firebaseapp.com\",\n  projectId: \"whatsapp-clone-e9611\",\n  storageBucket: \"whatsapp-clone-e9611.appspot.com\",\n  messagingSenderId: \"1090027411621\",\n  appId: \"1:1090027411621:web:160abbbb31fce28a12554c\",\n  measurementId: \"G-WDC12KGYF1\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebase.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, provider }\nexport default db","import { Avatar } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport db from \"./firebase\";\nimport \"./SidebarChat.css\";\n\nfunction SidebarChat({ addNewChat, id, name }) {\n  const [seed, setSeed] = useState(\"\");\n  const [messages, setMessages] = useState(\"\");\n\n  useEffect(() => {\n    if (id) {\n      db.collection(\"rooms\")\n        .doc(id)\n        .collection(\"messages\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot((snapshot) =>\n          setMessages(snapshot.docs.map((doc) => doc.data()))\n        );\n    }\n  }, [id]);\n\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, []);\n\n  const createChat = () => {\n    const roomName = prompt(\"Please enter name for chat\");\n    if (roomName) {\n      //do some clever database stuff....\n      db.collection(\"rooms\").add({\n        name: roomName,\n      });\n    }\n  };\n\n  return !addNewChat ? (\n    <Link to={`/rooms/${id}`}>\n      <div className=\"sidebarChat\">\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n        <div className=\"sidebarChat__info\">\n          <h2>{name}</h2>\n          <p>{messages[0]?.message}</p>\n        </div>\n      </div>\n    </Link>\n  ) : (\n    <div onClick={createChat} className=\"sidebarChat\">\n      <h2>Add New Chat</h2>\n    </div>\n  );\n}\n\nexport default SidebarChat;\n","import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);","import { Avatar, IconButton } from \"@material-ui/core\";\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Sidebar.css\";\nimport { SearchOutlined } from \"@material-ui/icons\";\nimport SidebarChat from \"./SidebarChat\";\nimport db from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction Sidebar() {\n  const [rooms, setRooms] = useState([]);\n  const [{ user }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    const unsubscribe = db.collection(\"rooms\").onSnapshot((snapshot) =>\n      setRooms(\n        snapshot.docs.map((doc) => ({\n          id: doc.id,\n          data: doc.data(),\n        }))\n      )\n    );\n    return () => {\n      unsubscribe();\n    };\n  }, []); //empty square brackets to only run when sidebar loads\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar__header\">\n        <Avatar src={user?.photoURL} />\n        <div className=\"sidebar__headerRight\">\n          <IconButton>\n            <DonutLargeIcon />\n          </IconButton>\n          <IconButton>\n            <ChatIcon />\n          </IconButton>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"sidebar__search\">\n        <div className=\"sidebar__searchContainer\">\n          <SearchOutlined />\n          <input placeholder=\"Search or start new chat\" type=\"text\" />\n        </div>\n      </div>\n      <div className=\"sidebar__chats\">\n        <SidebarChat addNewChat />\n        {rooms.map((room) => (\n          <SidebarChat key={room.id} id={room.id} name={room.data.name} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import { Avatar, IconButton } from \"@material-ui/core\";\nimport { AttachFile, MoreVert, SearchOutlined } from \"@material-ui/icons\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport userEvent from \"@testing-library/user-event\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./Chat.css\";\nimport db from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\nimport firebase from \"firebase\";\n\nfunction Chat() {\n  const [seed, setSeed] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  const { roomId } = useParams();\n  const [roomName, setRoomName] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [{ user }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    if (roomId) {\n      db.collection(\"rooms\")\n        .doc(roomId)\n        .onSnapshot((snapshot) => setRoomName(snapshot.data().name));\n\n      db.collection(\"rooms\")\n        .doc(roomId)\n        .collection(\"messages\")\n        .orderBy(\"timestamp\", \"asc\")\n        .onSnapshot((snapshot) =>\n          setMessages(snapshot.docs.map((doc) => doc.data()))\n        );\n    }\n  }, [roomId]);\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    console.log(\"You typed >>> \", input);\n    db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\n      message: input,\n      name: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setInput(\"\");\n  };\n\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, [roomId]);\n  return (\n    <div className=\"chat\">\n      <div className=\"chat__header\">\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n        <div className=\"chat__headerInfo\">\n          <h3>{roomName}</h3>\n          <p>\n            last seen{\" \"}\n            {new Date(\n              messages[messages.length - 1]?.timestamp?.toDate()\n            ).toUTCString()}\n          </p>\n        </div>\n        <div className=\"chat__headerRight\">\n          <IconButton>\n            <SearchOutlined />\n          </IconButton>\n          <IconButton>\n            <AttachFile />\n          </IconButton>\n          <IconButton>\n            <MoreVert />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"chat__body\">\n        {messages.map((message) => (\n          <p\n            className={`chat__message ${\n              message.name === user.displayName && \"chat__reciever\"\n            }`}\n          >\n            <span className=\"chat__name\">{message.name}</span>\n            {message.message}\n            <span className=\"chat__timestamp\">\n              {new Date(message.timestamp?.toDate()).toUTCString()}\n            </span>\n          </p>\n        ))}\n      </div>\n      <div className=\"chat__footer\">\n        <InsertEmoticonIcon />\n        <form>\n          <input\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Type a message\"\n            type=\"text\"\n          />\n          <button onClick={sendMessage} type=\"submit\">\n            Send a message\n          </button>\n        </form>\n        <MicIcon />\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n","export const initialState = {\n  user: null,\n};\n\n//selector\nexport const actionTypes = {\n  SET_USER: \"SET_USER\",\n};\n\nconst reducer = (state, action) => {\n  console.log(action);\n  switch (action.type) {\n    case actionTypes.SET_USER:\n      return {\n        ...state,\n        user: action.user,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { auth, provider } from \"./firebase\";\nimport \"./Login.css\";\nimport { actionTypes } from \"./reducer\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction Login() {\n  const [{}, dispatch] = useStateValue();\n  const signIn = () => {\n    auth\n      .signInWithPopup(provider)\n      .then((result) => {\n        dispatch({\n          type: actionTypes.SET_USER,\n          user: result.user,\n        });\n      })\n      .catch((error) => alert(error.message));\n  };\n  return (\n    <div className=\"login\">\n      <div className=\"login__container\">\n        <img\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/1196px-WhatsApp.svg.png\"\n          alt=\"\"\n        />\n        <div className=\"login__text\">\n          <h1>Sign in to Whatsapp</h1>\n        </div>\n\n        <Button onClick={signIn}>Sign in with google</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Sidebar from \"./Sidebar\";\nimport Chat from \"./Chat\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction App() {\n  const [{ user }, dispatch] = useStateValue();\n\n  return (\n    // BEM naming convention\n    <div className=\"app\">\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"app__body\">\n          <Router>\n            <Sidebar />\n            <Switch>\n              <Route path=\"/rooms/:roomId\">\n                <Chat />\n              </Route>\n              <Route path=\"/\">\n                <Chat />\n              </Route>\n            </Switch>\n          </Router>\n          {/*chat*/}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport reducer, { initialState } from \"./reducer\";\nimport { StateProvider } from \"./StateProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}